#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0pre on Tue Jul 12 21:31:21 2022
#

import wx
import time

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((647, 649))
        self.SetTitle("MQTT_Server")

        self.panel_1 = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
        self.panel_1.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.panel_1.SetScrollRate(10, 10)

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        label_1 = wx.StaticText(self.panel_1, wx.ID_ANY, "MQTT_Server", style=wx.ALIGN_CENTER_HORIZONTAL)
        label_1.SetForegroundColour(wx.Colour(255, 0, 0))
        label_1.SetFont(wx.Font(19, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Yu Gothic UI"))
        sizer_1.Add(label_1, 0, wx.ALL | wx.EXPAND, 10)

        grid_sizer_1 = wx.GridSizer(2, 2, 0, 0)
        sizer_1.Add(grid_sizer_1, 0, wx.EXPAND, 0)

        label_2 = wx.StaticText(self.panel_1, wx.ID_ANY, "Blocker IP : ")
        grid_sizer_1.Add(label_2, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(sizer_11, 0, wx.EXPAND, 0)

        self.text_ctrl_2 = wx.TextCtrl(self.panel_1, wx.ID_ANY, "192.168.2.123", style=wx.TE_READONLY)
        sizer_11.Add(self.text_ctrl_2, 1, wx.EXPAND, 0)

        label_3 = wx.StaticText(self.panel_1, wx.ID_ANY, "Storage Path : ")
        grid_sizer_1.Add(label_3, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        sizer_10 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(sizer_10, 0, wx.EXPAND, 0)

        self.text_ctrl_1 = wx.TextCtrl(self.panel_1, wx.ID_ANY, "C:/users/kaede/desktop", style=wx.TE_READONLY)
        sizer_10.Add(self.text_ctrl_1, 1, wx.EXPAND, 0)

        self.button_4 = wx.Button(self.panel_1, wx.ID_ANY, "select")
        sizer_10.Add(self.button_4, 0, 0, 0)

        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(sizer_3, 0, wx.ALL | wx.EXPAND, 2)

        self.gauge_1 = wx.Gauge(self.panel_1, wx.ID_ANY, 100)
        sizer_3.Add(self.gauge_1, 0, wx.EXPAND, 0)

        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3.Add(sizer_2, 0, wx.EXPAND, 0)

        self.text_ctrl_3 = wx.TextCtrl(self.panel_1, wx.ID_ANY, "Subscriving masseges from RED ...", style=wx.TE_READONLY)
        sizer_2.Add(self.text_ctrl_3, 1, 0, 0)

        self.button_1 = wx.Button(self.panel_1, wx.ID_ANY, "Save")
        sizer_2.Add(self.button_1, 0, 0, 0)

        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_5, 1, wx.EXPAND, 0)

        self.panel_4 = wx.Panel(self.panel_1, wx.ID_ANY)
        self.panel_4.SetBackgroundColour(wx.Colour(255, 228, 228))
        sizer_5.Add(self.panel_4, 1, wx.EXPAND, 0)

        sizer_6 = wx.BoxSizer(wx.VERTICAL)

        label_6 = wx.StaticText(self.panel_4, wx.ID_ANY, "RED")
        sizer_6.Add(label_6, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)

        label_11 = wx.StaticText(self.panel_4, wx.ID_ANY, "Entire device num : ")
        sizer_6.Add(label_11, 0, wx.ALL, 1)

        self.text_ctrl_7 = wx.TextCtrl(self.panel_4, wx.ID_ANY, "0", style=wx.TE_READONLY | wx.TE_RIGHT)
        sizer_6.Add(self.text_ctrl_7, 0, wx.ALIGN_RIGHT, 0)

        label_9 = wx.StaticText(self.panel_4, wx.ID_ANY, "Coneccting device num : ")
        sizer_6.Add(label_9, 0, wx.ALL, 1)

        self.text_ctrl_5 = wx.TextCtrl(self.panel_4, wx.ID_ANY, "0", style=wx.TE_READONLY | wx.TE_RIGHT)
        sizer_6.Add(self.text_ctrl_5, 0, wx.ALIGN_RIGHT, 0)

        label_10 = wx.StaticText(self.panel_4, wx.ID_ANY, "Disconeccting device num : ")
        sizer_6.Add(label_10, 0, wx.ALL, 1)

        self.text_ctrl_6 = wx.TextCtrl(self.panel_4, wx.ID_ANY, "0", style=wx.TE_READONLY | wx.TE_RIGHT)
        sizer_6.Add(self.text_ctrl_6, 0, wx.ALIGN_RIGHT, 0)

        self.panel_3 = wx.Panel(self.panel_1, wx.ID_ANY)
        self.panel_3.SetBackgroundColour(wx.Colour(206, 255, 201))
        sizer_5.Add(self.panel_3, 1, wx.EXPAND, 0)

        sizer_7 = wx.BoxSizer(wx.VERTICAL)

        label_7 = wx.StaticText(self.panel_3, wx.ID_ANY, "Memory")
        sizer_7.Add(label_7, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)

        label_12 = wx.StaticText(self.panel_3, wx.ID_ANY, "Stored massage in memory : ")
        sizer_7.Add(label_12, 0, wx.ALL, 1)

        self.text_ctrl_8 = wx.TextCtrl(self.panel_3, wx.ID_ANY, "0", style=wx.TE_READONLY | wx.TE_RIGHT)
        sizer_7.Add(self.text_ctrl_8, 0, wx.ALIGN_RIGHT, 0)

        label_13 = wx.StaticText(self.panel_3, wx.ID_ANY, "Stored FloorImage in memory : ")
        sizer_7.Add(label_13, 0, wx.ALL, 1)

        self.text_ctrl_9 = wx.TextCtrl(self.panel_3, wx.ID_ANY, "0", style=wx.TE_READONLY | wx.TE_RIGHT)
        sizer_7.Add(self.text_ctrl_9, 0, wx.ALIGN_RIGHT, 0)

        label_14 = wx.StaticText(self.panel_3, wx.ID_ANY, "Stored CeilImage in memory  : ")
        sizer_7.Add(label_14, 0, wx.ALL, 1)

        self.text_ctrl_10 = wx.TextCtrl(self.panel_3, wx.ID_ANY, "0", style=wx.TE_READONLY | wx.TE_RIGHT)
        sizer_7.Add(self.text_ctrl_10, 0, wx.ALIGN_RIGHT, 0)

        self.panel_2 = wx.Panel(self.panel_1, wx.ID_ANY)
        self.panel_2.SetBackgroundColour(wx.Colour(213, 212, 255))
        sizer_5.Add(self.panel_2, 1, wx.EXPAND, 0)

        sizer_8 = wx.BoxSizer(wx.VERTICAL)

        label_8 = wx.StaticText(self.panel_2, wx.ID_ANY, "Storage", style=wx.ST_NO_AUTORESIZE)
        sizer_8.Add(label_8, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)

        self.panel_5 = wx.ScrolledWindow(self.panel_2, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
        self.panel_5.SetScrollRate(10, 10)
        sizer_8.Add(self.panel_5, 1, wx.EXPAND, 0)

        sizer_9 = wx.BoxSizer(wx.VERTICAL)

        self.tree_ctrl_1 = wx.TreeCtrl(self.panel_5, wx.ID_ANY, style=wx.BORDER_SUNKEN | wx.TR_HAS_BUTTONS | wx.TR_NO_BUTTONS | wx.TR_SINGLE)
        self.tree_ctrl_1.SetBackgroundColour(wx.Colour(224, 224, 255))
        sizer_9.Add(self.tree_ctrl_1, 1, wx.EXPAND, 0)

        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_4, 0, wx.ALL | wx.EXPAND, 2)

        label_5 = wx.StaticText(self.panel_1, wx.ID_ANY, u"保存フォルダ番号 : ")
        sizer_4.Add(label_5, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        self.spin_ctrl_1 = wx.SpinCtrl(self.panel_1, wx.ID_ANY, "1", min=0, max=1000)
        sizer_4.Add(self.spin_ctrl_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        label_4 = wx.StaticText(self.panel_1, wx.ID_ANY, "comment : ")
        sizer_4.Add(label_4, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 3)

        self.text_ctrl_4 = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        sizer_4.Add(self.text_ctrl_4, 1, wx.ALIGN_CENTER_VERTICAL, 0)

        self.button_3 = wx.Button(self.panel_1, wx.ID_ANY, "Change folder")
        sizer_4.Add(self.button_3, 0, 0, 0)

        self.panel_5.SetSizer(sizer_9)

        self.panel_2.SetSizer(sizer_8)

        self.panel_3.SetSizer(sizer_7)

        self.panel_4.SetSizer(sizer_6)

        self.panel_1.SetSizer(sizer_1)

        self.Layout()

        self.button_4.Bind(wx.EVT_BUTTON, self.SelectDir)
        self.button_1.Bind(wx.EVT_BUTTON, self.Save)
        self.button_3.Bind(wx.EVT_BUTTON, self.ChangeFolder)
        # end wxGlade

    def SelectDir(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'SelectDir' not implemented!")
        event.Skip()

    def Save(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'Save' not implemented!")
        event.Skip()

    def ChangeFolder(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'ChangeFolder' not implemented!")
        event.Skip()

# end of class MyFrame

class MyApp(wx.App):
    def OnInit(self):
        self.mainFrame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.mainFrame)
        self.mainFrame.Show()
        return True
    def MainLoop(self):
        time.sleep(0.1)
        return super().MainLoop()

# end of class MyApp

if __name__ == "__main__":
    MQTT_Server = MyApp(0)
    MQTT_Server.MainLoop()
